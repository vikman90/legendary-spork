{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#what-is-wazuh-agent","title":"What is Wazuh Agent?","text":"<p>Wazuh Agent is a lightweight, cross-platform software component designed to monitor endpoints and collect security-related data. It sends this data to a Wazuh Manager for analysis, enabling real-time threat detection, compliance monitoring, and incident response.</p> <p>Wazuh Agent operates across various operating systems, including Windows, macOS, and Linux. The agent performs tasks such as:</p> <ul> <li>File integrity monitoring</li> <li>Vulnerability detection</li> <li>Rootkit detection</li> <li>Log data collection</li> <li>Active response to threats</li> </ul> <p>The agent communicates securely with the Wazuh Manager using encrypted channels and can be configured and managed remotely.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Cross-platform support: Available for major operating systems.</li> <li>Real-time monitoring: Provides immediate insight into system changes and potential threats.</li> <li>Modular design: Easily extendable to support custom checks and integrations.</li> <li>Low resource consumption: Optimized to work efficiently on different hardware platforms, from servers to IoT devices.</li> </ul> <p>The Wazuh Agent is an essential part of the Wazuh security platform, helping organizations detect and respond to security threats in a scalable manner.</p>"},{"location":"#agent-architecture","title":"Agent Architecture","text":"<pre><code>graph TD\n    FIM(FIM)\n    Inventory(Inventory)\n    Logcollector(Logcollector)\n    Queue(Queue)\n    Communicator(Communicator)\n    CommandHandler(Command Handler)\n\n    FIM --&gt; Queue\n    Inventory --&gt; Queue\n    Logcollector --&gt; Queue\n    Queue --&gt; Communicator\n    Communicator --&gt; CommandHandler</code></pre>"},{"location":"build/","title":"How to Compile","text":""},{"location":"build/#building-wazuh-agent-from-source","title":"Building Wazuh Agent from Source","text":""},{"location":"build/#prerequisites","title":"Prerequisites","text":"<p>To compile Wazuh Agent, ensure that you have the following dependencies installed:</p> <ul> <li>Operating System: Linux, macOS, or Windows</li> <li>Compilers: GCC or Clang for Linux/macOS, Visual Studio for Windows</li> <li>Build Tools:</li> <li><code>make</code></li> <li><code>cmake</code></li> <li><code>ninja</code> (optional)</li> <li>Libraries:</li> <li><code>openssl</code></li> <li><code>libssl-dev</code></li> <li><code>zlib</code></li> <li><code>libsystemd-dev</code> (for systemd support on Linux)</li> </ul>"},{"location":"build/#steps-to-compile-on-linuxmacos","title":"Steps to Compile on Linux/macOS","text":"<ol> <li> <p>Clone the Wazuh repository:    <pre><code>git clone https://github.com/wazuh/wazuh.git\ncd wazuh/src\n</code></pre></p> </li> <li> <p>Configure the build environment:    <pre><code>mkdir build\ncd build\ncmake ..\n</code></pre></p> </li> <li> <p>Compile the source code:    <pre><code>make\n</code></pre></p> </li> <li> <p>Install the agent:    <pre><code>sudo make install\n</code></pre></p> </li> </ol>"},{"location":"build/#steps-to-compile-on-windows","title":"Steps to Compile on Windows","text":"<ol> <li> <p>Clone the Wazuh repository:    Open a terminal in Visual Studio and run:    <pre><code>git clone https://github.com/wazuh/wazuh.git\ncd wazuh/src\n</code></pre></p> </li> <li> <p>Open the CMake GUI and configure the project using the appropriate toolchain (Visual Studio, Ninja, etc.).</p> </li> <li> <p>Build the solution:    After configuration, click \"Generate\" and \"Open Project\" in Visual Studio. Then, compile the solution from the Visual Studio interface.</p> </li> <li> <p>Install the agent:    Run the generated executable to complete the installation process.</p> </li> </ol>"},{"location":"build/#additional-options","title":"Additional Options","text":"<ul> <li>Debugging: Use the <code>-DCMAKE_BUILD_TYPE=Debug</code> flag during the <code>cmake</code> configuration step to enable debugging symbols.</li> <li>Cross-compilation: To build for a different architecture (e.g., ARM64), set up a cross-compiler toolchain during the <code>cmake</code> configuration.</li> </ul>"},{"location":"reference/command/","title":"Command Call","text":""},{"location":"reference/command/#configuration-files","title":"Configuration Files","text":"<ul> <li>ossec.conf: The main configuration file for the Wazuh Agent. It defines the agent\u2019s behavior, including monitored paths, server connections, and active response rules.</li> </ul> <p>Example configuration block:   <pre><code>&lt;agent&gt;\n  &lt;server&gt;\n    &lt;address&gt;192.168.1.100&lt;/address&gt;\n    &lt;port&gt;1514&lt;/port&gt;\n    &lt;protocol&gt;udp&lt;/protocol&gt;\n  &lt;/server&gt;\n  &lt;notify_time&gt;10&lt;/notify_time&gt;\n  &lt;disable_reconnect&gt;no&lt;/disable_reconnect&gt;\n&lt;/agent&gt;\n</code></pre></p> <ul> <li>agent.conf: The agent-specific configuration for customizing behavior per agent installation.</li> </ul>"},{"location":"reference/command/#commands","title":"Commands","text":"<ul> <li>agent-control: A command-line utility to control and manage the Wazuh Agent.</li> </ul> <p>Common commands:   <pre><code>/var/ossec/bin/agent-control -s    # Show agent status\n/var/ossec/bin/agent-control -r    # Restart the agent\n</code></pre></p>"},{"location":"reference/command/#logging","title":"Logging","text":"<p>Wazuh Agent logs all its operations in the following files:</p> <ul> <li>ossec.log: Primary log file located in <code>/var/ossec/logs/ossec.log</code> on Linux/macOS or <code>C:\\Program Files (x86)\\ossec-agent\\logs\\ossec.log</code> on Windows.</li> </ul> <p>Example log entries:   <pre><code>2024/09/30 12:30:45 ossec-agent: INFO: Agent started successfully.\n2024/09/30 12:35:10 ossec-agent: WARNING: Connection to the manager failed.\n</code></pre></p>"},{"location":"reference/command/#useful-links","title":"Useful Links","text":"<ul> <li>Wazuh Documentation</li> <li>Wazuh Agent GitHub Repository</li> </ul>"},{"location":"reference/settings/","title":"Agent Configuration","text":"<p>This document outlines the configurable options available in the <code>etc/wazuh-agent/agent.yml</code> file for the Wazuh Agent. The configuration is divided into different sections, each containing relevant options to customize the agent\u2019s behavior.</p>"},{"location":"reference/settings/#agent","title":"Agent","text":"Option Description Default value server The address of the Wazuh server to connect to. None timeout Connection timeout, specified in seconds. 1s"},{"location":"reference/settings/#inventory","title":"Inventory","text":"Option Description Default value interval The frequency of the inventory scan (e.g., 1d for daily). 1d hardware Whether to scan the hardware components of the system. yes os Whether to scan the operating system information. yes network Whether to scan network configuration and details. yes packages Whether to scan installed software packages. yes ports Whether to scan open ports on the system. yes"}]}